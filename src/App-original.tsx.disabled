import { QueryClientProvider } from '@tanstack/react-query'
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'
import { queryClient } from './lib/query-client'
import { AuthProvider, useAuth } from './components/auth/auth-provider'
import { AuthForm } from './components/auth/auth-form'
import { Navbar } from './components/layout/navbar'
import { HomePage } from './pages/home'
import { LandingPage } from './pages/landing'
import CouponsPage from './pages/coupons'
import { AdminLayout } from './components/admin/admin-layout'
import { AdminDashboard } from './pages/admin/dashboard'  
import { AdminUsersPage } from './pages/admin/users'
import { AdminBusinessesPage } from './pages/admin/businesses'
import { AdminCouponsPage } from './pages/admin/coupons'
import { AdminRedemptionsPage } from './pages/admin/redemptions'
import { DatabaseTestPage } from './pages/database-test'
import TestPage from './pages/test'
import SimpleTestPage from './pages/simple-test'
import { Toaster } from './components/ui/toaster'
import { ErrorBoundary } from './components/error-boundary'
import { Loader2 } from 'lucide-react'

function ProtectedRoute({ children }: { children: React.ReactNode }) {
  const { user, loading } = useAuth()
  
  if (loading) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="text-center space-y-4">
          <Loader2 className="h-8 w-8 animate-spin text-primary mx-auto" />
          <p className="text-sm text-muted-foreground">Loading...</p>
        </div>
      </div>
    )
  }
  
  if (!user) {
    return <Navigate to="/auth" replace />
  }
  
  return <>{children}</>
}

function AdminRoute({ children }: { children: React.ReactNode }) {
  const { user } = useAuth()
  
  if (!user?.isAdmin) {
    return <Navigate to="/dashboard" replace />
  }
  
  return <AdminLayout>{children}</AdminLayout>
}

function AppContent() {
  return (
    <Routes>
      {/* Public routes - anyone can access */}
      <Route path="/" element={<LandingPage />} />
      <Route path="/auth" element={<AuthForm />} />
      
      {/* Protected routes - require authentication */}
      <Route path="/dashboard" element={
        <ProtectedRoute>
          <div className="min-h-screen bg-gray-50">
            <Navbar />
            <HomePage />
          </div>
        </ProtectedRoute>
      } />
      
      <Route path="/coupons" element={
        <ProtectedRoute>
          <div className="min-h-screen bg-gray-50">
            <Navbar />
            <CouponsPage />
          </div>
        </ProtectedRoute>
      } />
      
      {/* Admin routes - require admin authentication */}
      <Route path="/admin" element={
        <ProtectedRoute>
          <AdminRoute>
            <AdminDashboard />
          </AdminRoute>
        </ProtectedRoute>
      } />
      
      <Route path="/admin/users" element={
        <ProtectedRoute>
          <AdminRoute>
            <AdminUsersPage />
          </AdminRoute>
        </ProtectedRoute>
      } />
      
      <Route path="/admin/businesses" element={
        <ProtectedRoute>
          <AdminRoute>
            <AdminBusinessesPage />
          </AdminRoute>
        </ProtectedRoute>
      } />
      
      <Route path="/admin/coupons" element={
        <ProtectedRoute>
          <AdminRoute>
            <AdminCouponsPage />
          </AdminRoute>
        </ProtectedRoute>
      } />
      
      <Route path="/admin/redemptions" element={
        <ProtectedRoute>
          <AdminRoute>
            <AdminRedemptionsPage />
          </AdminRoute>
        </ProtectedRoute>
      } />
      
      <Route path="/admin/admins" element={
        <ProtectedRoute>
          <AdminRoute>
            <div>Admins page coming soon</div>
          </AdminRoute>
        </ProtectedRoute>
      } />
      
      <Route path="/admin/test-data" element={
        <ProtectedRoute>
          <AdminRoute>
            <div>Test data page coming soon</div>
          </AdminRoute>
        </ProtectedRoute>
      } />
      
      {/* Development/testing routes */}
      <Route path="/simple" element={<SimpleTestPage />} />
      <Route path="/test" element={<TestPage />} />
      
      <Route path="/database-test" element={
        <ProtectedRoute>
          <div className="min-h-screen bg-gray-50">
            <Navbar />
            <DatabaseTestPage />
          </div>
        </ProtectedRoute>
      } />
      
      {/* Catch all - redirect to landing */}
      <Route path="*" element={<Navigate to="/" replace />} />
    </Routes>
  )
}

function App() {
  return (
    <ErrorBoundary>
      <QueryClientProvider client={queryClient}>
        <AuthProvider>
          <Router>
            <AppContent />
            <Toaster />
          </Router>
        </AuthProvider>
      </QueryClientProvider>
    </ErrorBoundary>
  )
}

export default App